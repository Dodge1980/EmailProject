/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IPSelect.java
 *
 * Created on 03-Mar-2016, 14:05:18
 */
package secureemailclient;

import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;


/**
 *
 * @author spgw33
 */
public class IPSelect extends javax.swing.JFrame {
    
    /** Creates new form IPSelect */
    public IPSelect() {
        initComponents();
        URL url = IPSelect.class.getResource("/images/iconPadlock.png");
        ImageIcon icon = new ImageIcon(url);
        setIconImage(icon.getImage());
        
        this.setAlwaysOnTop(true);
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        connectExternal = new javax.swing.JButton();
        connectLocalhost = new javax.swing.JButton();
        ipTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Select IP");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Where would you like to connect?");

        connectExternal.setText("External Connect");
        connectExternal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectExternalActionPerformed(evt);
            }
        });

        connectLocalhost.setText("Connect to localhost");
        connectLocalhost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectLocalhostActionPerformed(evt);
            }
        });

        ipTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipTextField.setText("129.234.204.224");
        ipTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ipTextFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(ipTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(connectExternal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(connectLocalhost, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(connectLocalhost, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(connectExternal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectLocalhostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectLocalhostActionPerformed
        this.setVisible(false);
        LoginGUI loginGUI = new LoginGUI("localhost");
    }//GEN-LAST:event_connectLocalhostActionPerformed

    private void connectExternalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectExternalActionPerformed
        String givenIP = ipTextField.getText();
        this.setVisible(false);
        LoginGUI loginGUI = new LoginGUI(givenIP);
    }//GEN-LAST:event_connectExternalActionPerformed

    private void ipTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipTextFieldKeyPressed
        if(evt.getKeyCode() == 10){
             //connectExternalActionPerformed(null);

            URL url = getClass().getResource("/images/iconPadlock.png");
            
            JOptionPane.showMessageDialog(this, url);

        }
    }//GEN-LAST:event_ipTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new IPSelect().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectExternal;
    private javax.swing.JButton connectLocalhost;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
